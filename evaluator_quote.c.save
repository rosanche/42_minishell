/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   evaluator_quote.c                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ecaceres <ecaceres@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/02/19 15:22:18 by ecaceres          #+#    #+#             */
/*   Updated: 2020/02/19 15:22:18 by ecaceres         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

int
	is_quote(int c)
{
	return (c == '\"' || c == '\'');
}

int
	evaluate_quote_single(char *line, size_t *consumed)
{
	int		ret;
	size_t	sub;

	while (*line)
	{
		if (*line == '\\')
		{
			if (*(line + 1) == '\'')
			{
				ft_printf("\e[95m%c\e[0m", '\\');
				*consumed += 2;
				return (0);
			}
			else
			{
				ret = evaluator_escape_backslash(line, &sub);
//				ft_printf("r%ds%d", ret, 0 + sub);
				if (ret != -1)
				{
					ft_putchar_fd(ret, OUT);
					*consumed += sub;
					line += *consumed;
				}
			}
		}
		else if (*line == '\'')
		{
			*consumed += 1;
			return (0);
		}
		else
			ft_printf("\e[95m%c\e[0m", *line);
//			ft_putchar_fd(*line, OUT);
		*consumed += 1;
		line++;
	}
	return (0);
}

int
	evaluate_quote_double(char *line, size_t *consumed)
{
	int		ret;
	size_t	sub;

	while (*line)
	{
		if (*line == '\\')
		{
			if (*(line + 1) == '\"')
			{
				line++;
				ft_putchar_fd('\"', OUT);
				*consumed += 1;
			}
			else
			{
				ret = evaluator_escape_backslash(line, &sub);
				if (ret != -1)
				{
					ft_putchar_fd(ret, OUT);
					*consumed += sub;
					line += *consumed;
				}
			}
		}
		else if (*line == '\"')
		{
			*consumed += 1;
			return (0);
		}
		else
			ft_printf("\e[96m%c\e[0m", *line);
//			ft_putchar_fd(*line, OUT);
		*consumed += 1;
		line++;
	}
	return (0);
}

int
	evaluate_quote(char *line, char of, size_t *consumed)
{
	int		ret;
	size_t	sub;

	while (*line)
	{
		if (*line == '\\')
		{
			//ft_printf("\e[103m\\\e[0m");

			if (is_quote(*(line + 1)))
			{
				ft_printf("\e[94m%c\e[0m", *(line + 1));
				line += 2;
				*consumed += 2;
			}
			else
			{
				line += 1;
				*consumed += 1;
//				ret = evaluator_escape_backslash(line, &sub);
//				//ft_printf("r%ds%d", ret, 0 + sub);
//				if (ret != -1)
//				{
////					ft_putchar_fd(ret, OUT);
//					ft_printf("\e[100m%c\e[0m", ret);
//					*consumed += sub;
//					line += sub;
//				}
			}
		}
		else if (*line == '\'')
		{
			sub = 0;
//			ft_printf("\e[102me\e[0m");
			evaluate_quote_single(line + 1, &sub);
//			ft_printf("\e[101mr\e[0m");
			*consumed += sub + 1;
			line += sub + 1;
		}
		else if (*line == '\"')
		{
			sub = 0;
//			ft_printf("\e[102mE\e[0m");
			evaluate_quote_double(line + 1, &sub);
//			ft_printf("\e[101mR\e[0m");
			*consumed += sub + 1;
			line += sub + 1;
		}
		else if (ft_iswspace(*line))
			return (1);
		else
		{
			ft_printf("\e[94m%c\e[0m", *line);
//			ft_putchar_fd(*line, OUT);
			*consumed += 1;
			line++;
		}
//		if (*line)
//		{
//			*consumed += 1;
//			line++;
//		}
	}
	return (0);
}

size_t
	evaluate_quote_size(char *line, size_t *consumed)
{
	t_quote_ctx ctx;
	size_t		size;
	int			escaped;

	ctx = (t_quote_ctx){ 0, 0 };
	size = 0;
	while (*line)
	{
		if (*line == '\\')
		{
			escaped = evaluator_escape_backslash(line, consumed);
			if (escaped != -1)
			{
				ft_putchar_fd(escaped, OUT);
				line += *consumed;
			}
			else
			{
				ft_putchar_fd(*line, OUT);
				line += 1;
			}
		}
		else
		{
			ft_putchar_fd(*line, OUT);
			*consumed += !!++line;
		}
	}
	return (size);
}
